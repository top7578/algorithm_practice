#
# 백준 
# DFS / BFS
# 9466. 텀 프로젝트 (골드3)
#
"""
아이디어 : 사이클을 구성하는 부분 그래프에 포함된 노드의 갯수를 세는 문제
"""

import sys
sys.setrecursionlimit(10 ** 5)
input = sys.stdin.readline

def dfs(now):
    visited[now] = True
    for next in graph[now]:
        if not visited[next]:
            dfs(next)
        # 사이클 발생
        elif not finished[next]:
            v = next
            while v != now:
                ans.append(v)
                v = graph[v][0]
            ans.append(now)
    finished[now] = True 

t = int(input())

for _ in range(t):
    n = int(input())

    data = [-1] + list(map(int, input().split()))

    graph = [
        []
        for _ in range(n+1)
    ]

    for i in range(len(data)):
        graph[i].append(data[i])
    
    visited = [False] * (n+1)
    finished = [False] * (n+1)

    ans = []
    for i in range(1, n+1):
        if not visited[i]:
            dfs(i)
    
    print(n - len(ans))
