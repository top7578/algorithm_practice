#
# 백준 
# DFS / BFS
# 2668. 숫자 고르기 (골드5)
#
"""
아이디어 : 단방향 그래프, 사이클을 구성하는 그래프에 포함된 노드의 갯수를 세는 문제 -> DFS 사용
"""

def dfs(now):
    visited[now] = True
    for next in graph[now]:
        if not visited[next]:
            dfs(next)
        #방문했지만 처리되지 않은(finished) 노드
        elif not finished[next]:
            v = next
            while v != now:
                ans.append(v)
                v = graph[v][0]
            ans.append(now)
    finished[now] = True

n = int(input())

graph = [
    []
    for _ in range(n+1)
]
for i in range(1, n+1):
    graph[i].append(int(input()))

visited = [False] * (n+1)
finished = [False] * (n+1)

ans = []
for i in range(1, n+1):
    if not visited[i]:
        dfs(i)

ans.sort()
print(len(ans))
for v in ans:
    print(v)
