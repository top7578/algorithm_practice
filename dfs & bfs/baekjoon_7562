from collections import deque
import sys
input = lambda: sys.stdin.readline().rstrip()

dx = [-1, -2, -2, -1, 1, 2, 2, 1]
dy = [-2, -1, 1, 2, 2, 1, -1, -2]

def bfs(x_, y_):
  q = deque([(x_, y_, 0)])
  visited = [[False]*l for _ in range(l)]
  visited[x_][y_] = True
  while q:
    x, y, cnt = q.popleft()
    if (x, y) == (target_x, target_y):
      return cnt

    for i in range(8):
      nx = x + dx[i]
      ny = y + dy[i]
      
      if 0 <= nx < l and 0 <= ny < l:
        if not visited[nx][ny]:
          q.append((nx, ny, cnt+1))
          visited[nx][ny] = True

t = int(input())

for _ in range(t):
  l = int(input())

  x, y = map(int, input().split())

  target_x, target_y = map(int, input().split())

  answer = bfs(x, y)

  print(answer)
