from collections import deque
import sys
input = lambda : sys.stdin.readline().rstrip()

dx = [-1, 0, 1, 0]
dy = [0, 1, 0, -1]

def melt():
  q = deque()
  q.append([0, 0])

  cnt_air = [[0]*m for _ in range(n)] # 공기와 닿은 면적
  visited = [[0]*m for _ in range(n)]
  visited[0][0] = 1

  while q:
    x, y = q.popleft()
    for i in range(4):
      nx = x + dx[i]
      ny = y + dy[i]
      if 0 <= nx < n and 0 <= ny < m:
        if board[nx][ny] == 0 and visited[nx][ny] == 0:
          q.append([nx, ny])
        elif board[nx][ny] == 1:
          cnt_air[nx][ny] += 1
        visited[nx][ny] = 1

  check = False
  for i in range(n):
    for j in range(m):
      if cnt_air[i][j] >= 2:
        board[i][j] = 0
        check = True
  return check    

def time_():
  t = 0
  while True:
    if melt():
      t += 1
    else:
      return t
      
n, m = map(int, input().split())

board = [list(map(int, input().split())) for _ in range(n)]

ans = time_()

print(ans)
