#
# 백준 
# DFS / BFS
# 1707. 이분 그래프 (골4)
#
"""
아이디어 : 이분 그래프 -> BFS를 진행하며 인접 노드를 다른 집합으로 분류하고(방문x), 이미 같은 집합이면 이분 그래프X 
"""
from collections import deque
import sys

input = sys.stdin.readline

t = int(input())

def bfs(s):
    global ans
    q = deque([s])
    visited[s] = 0

    while q:
        now = q.popleft() 
        for next in graph[now]:
            # 다음 노드 아직 방문하지 않았다면
            if visited[next] == -1:
                q.append(next)
                visited[next] = 1 - visited[now]
            # 다음 노드가 같은 집합이라면 이분 그래프 X
            elif visited[next] == visited[now]:
                ans = False
                break

for _ in range(t):
    n, e = map(int, input().split())

    graph = [
        []
        for _ in range(n+1)
    ]

    for _ in range(e):
        u, v = map(int, input().split())
        graph[u].append(v)
        graph[v].append(u)

    visited = [-1] * (n+1)

    ans = True #이분 그래프 
    for i in range(1, n+1):
        if visited[i] == -1:
            bfs(i)

    print('YES' if ans else 'NO')
