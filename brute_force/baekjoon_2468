from collections import deque

dx = [-1, 0, 1, 0]
dy = [0, 1, 0, -1]

def visit(tmp, x, y):
    q = deque()
    q.append((x, y))
    while q:
        x, y = q.pop()
        for i in range(4):
            nx = x + dx[i]
            ny = y + dy[i] 
            if 0 <= nx <= n-1 and 0 <= ny <= n-1:
                if tmp[nx][ny] != 0:
                    tmp[nx][ny] = 0
                    q.append((nx, ny))

def find_safezone(h):
    tmp = [
        [0]*n
        for _ in range(n) 
    ]
    #비양 rain일 때, 잠긴 도시 표시(0)
    for i in range(n):
        for j in range(n):
            # 비 양 보다 건물 높이 높으면 기록
            if heights[i][j] > h:
                tmp[i][j] = heights[i][j]

    #savezone 수 count
    safezone = 0
    for i in range(n):
        for j in range(n):
            if tmp[i][j]!=0:
                tmp[i][j] = 0
                visit(tmp, i, j)
                safezone += 1
    return safezone

n = int(input())

heights = []

max_height = 0
for i in range(n):
    lst = list(map(int, input().split()))
    heights.append(lst)
    max_height = max(max_height, max(lst))

#비 높이 설정
ans = 0
for h in range(max_height):
    ans = max(ans, find_safezone(h))

print(ans)
