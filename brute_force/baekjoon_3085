'''
1. 아이디어
- 완전탐색: 모든 경우의 수
- 각 행, 열 별로 최대 연속 같은 색상 사탕 수
2. 시간복잡도
- O(N*N*4*N*N) = 25,000,000
3. 자료구조
- 보드: int[][]
'''
n = int(input())

board = [
    list(input())
    for _ in range(n)
]

dx = [-1, 0, 1, 0]
dy = [0, 1, 0, -1]

answer = 0

def count():
    max_cnt = 0
    for i in range(n):
        cnt = 1
        for j in range(n-1):
            if board[i][j+1] == board[i][j]:
                cnt += 1
            else:
                cnt = 1
            max_cnt = max(max_cnt, cnt)
        
    for j in range(n):
        cnt = 1
        for i in range(n-1):
            if board[i+1][j] == board[i][j]:
                cnt += 1
            else:
                cnt = 1
            max_cnt = max(max_cnt, cnt)        
    return max_cnt

for x in range(n):
    for y in range(n):
        for d in range(4):
            nx = x + dx[d]
            ny = y + dy[d]
            if 0 <= nx < n and 0 <= ny < n:
                if board[x][y] != board[nx][ny]:
                    board[x][y], board[nx][ny] = board[nx][ny], board[x][y]
                    answer = max(answer, count())
                    board[x][y], board[nx][ny] = board[nx][ny], board[x][y]
print(answer)
