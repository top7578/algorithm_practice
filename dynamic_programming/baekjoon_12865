# 배낭문제(Knapsack problem)
#1. 밑에서 끌어오기
#2. d[i-1]인 이유: 1번에 1개만 활용 가능


n, k = map(int, input().split())

things = [(-1, -1)]
for _ in range(n):
  w, v = map(int, input().split())
  things.append((w, v))

things.sort()

d = [[0]*(k+1) for _ in range(n+1)]

for i in range(1, n+1):
  for j in range(things[0][1], k+1):
    if things[i][0] > j:
      d[i][j] = d[i-1][j]       #1.
    else:
      d[i][j] = max(d[i-1][j], d[i-1][j - things[i][0]] + things[i][1])   #2

print(d[i][j])
