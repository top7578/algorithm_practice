#1. 가장 윗줄과 가장 왼쪽줄도 비교를 해줘야 하기 때문에 한칸씩 더해서 만들어 줌

n, m = map(int, input().split())

board = [list(map(int, input().split())) for _ in range(n)]

d = [[0]*(m+1) for _ in range(n+1)] #1

for i in range(1, n+1):
  for j in range(1, m+1):
      d[i][j] = max(d[i-1][j-1], d[i-1][j], d[i][j-1]) + board[i-1][j-1]

print(d[n][m])

"""
#bfs 풀이

import sys
input = sys.stdin.readline
from collections import deque
n, m = map(int, input().split())

mat = []
for i in range(n):
    mat.append(list(map(int, input().split())))

score = [[-1 for i in range(m)] for j in range(n)]
score[0][0] = mat[0][0]

dx = [1, 0]
dy = [0, 1]

def bfs(y, x):
    q = deque()
    q.append([y, x])
    while q:
        y, x = q.popleft()
        for i in range(2):
            ny = y + dy[i]
            nx = x + dx[i]
            if 0 <= nx < m and 0 <= ny < n:
                if score[ny][nx] < score[y][x] + mat[ny][nx]:
                    score[ny][nx] = score[y][x] + mat[ny][nx]
                    q.append([ny, nx])
bfs(0, 0)
print(score[-1][-1])
"""
