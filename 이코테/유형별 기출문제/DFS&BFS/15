#
# 이코테 - 유형별 기출 문제
# DFS/BFS
# 15. 특정 거리의 도시 찾기
# 모든 도시에 대한 최단 거리 초기화 방법도 고민 (distance = [-1] * (n+1))
#

from collections import deque

n, m, k, x = map(int, input().split())

visited = [False] * (n+1)

graph = [
    [] for _ in range(n+1)
]

for i in range(m):
    s, e = map(int, input().split())
    graph[s].append(e)

q = deque([(x, 0)])
visited[x] = True

v_lst = []
while q:
    
    now = q.popleft()
    # 종료 조건 : k 보다 크면 종료
    if now[1] > k:
        break
    
    for next in graph[now[0]]:
        if visited[next] == False:
            dist =  now[1] + 1
            if dist == k:
                v_lst.append(next)
            q.append((next, dist))
            visited[next] = True

v_lst.sort()
if len(v_lst) == 0:
    print(-1)
else:
    for v in v_lst:
        print(v)
