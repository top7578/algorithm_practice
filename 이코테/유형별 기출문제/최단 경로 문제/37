#
# 이코테 - 유형별 기출 문제
# DP
# 37. 플로이드
#
"""
아이디어 : 플로이드 워셜 알고리즘 O(n^3)
"""
INF = int(1e9)

n = int(input())
m = int(input())

graph = [
    [INF] * (n+1)
    for _ in range(n+1)
]
for _ in range(m):
    a, b, c = map(int, input().split())
    if graph[a][b] > c:
        graph[a][b] = c 

for a in range(1, n+1):
    for b in range(1, n+1):
        if a == b:
            graph[a][b] = 0

for k in range(1, n+1):
    for a in range(1, n+1):
        for b in range(1, n+1):
            graph[a][b] = min(graph[a][b], graph[a][k] + graph[k][b])

for a in range(1, n+1):
    for b in range(1, n+1):
        if graph[a][b] >= INF:
            print(0, end=" ")
        else:
            print(graph[a][b], end=" ")
    print()
